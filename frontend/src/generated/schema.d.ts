/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/articles/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["articles_list"]
    put?: never
    post: operations["articles_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/articles/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["articles_retrieve"]
    put: operations["articles_update"]
    post?: never
    delete: operations["articles_destroy"]
    options?: never
    head?: never
    patch: operations["articles_partial_update"]
    trace?: never
  }
  "/api/articles/{id}/epub/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["articles_epub_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/articles/{id}/html/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["articles_html_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/articles/{id}/pdf/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["articles_pdf_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/articles/{id}/translate/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations["articles_translate_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/auth-token/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: operations["auth_token_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/feeds/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["feeds_list"]
    put?: never
    post: operations["feeds_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/feeds/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["feeds_retrieve"]
    put: operations["feeds_update"]
    post?: never
    delete: operations["feeds_destroy"]
    options?: never
    head?: never
    patch: operations["feeds_partial_update"]
    trace?: never
  }
  "/api/feeds/simple/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["feeds_simple_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/lists/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["lists_list"]
    put?: never
    post: operations["lists_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/lists/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["lists_retrieve"]
    put: operations["lists_update"]
    post?: never
    delete: operations["lists_destroy"]
    options?: never
    head?: never
    patch: operations["lists_partial_update"]
    trace?: never
  }
  "/api/lists/{id}/add_article/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations["lists_add_article_update"]
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/lists/{id}/epub/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["lists_epub_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/lists/{id}/html/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["lists_html_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/lists/{id}/pdf/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["lists_pdf_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/lists/{id}/remove_article/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete: operations["lists_remove_article_destroy"]
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/lists/{id}/rss/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["lists_rss_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/lists/me/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["lists_me_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/profile/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["profile_retrieve"]
    put: operations["profile_update"]
    post?: never
    delete?: never
    options?: never
    head?: never
    patch: operations["profile_partial_update"]
    trace?: never
  }
  "/api/schema/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /** @description OpenApi3 schema for this API. Format can be selected via content negotiation.
     *
     *     - YAML: application/vnd.oai.openapi
     *     - JSON: application/vnd.oai.openapi+json */
    get: operations["schema_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/user-feeds/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["user_feeds_list"]
    put?: never
    post: operations["user_feeds_create"]
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/user-feeds/{id}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["user_feeds_retrieve"]
    put: operations["user_feeds_update"]
    post?: never
    delete: operations["user_feeds_destroy"]
    options?: never
    head?: never
    patch: operations["user_feeds_partial_update"]
    trace?: never
  }
  "/api/users/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["users_list"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  "/api/users/{username}/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["users_retrieve"]
    put: operations["users_update"]
    post?: never
    delete?: never
    options?: never
    head?: never
    patch: operations["users_partial_update"]
    trace?: never
  }
  "/api/users/me/": {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations["users_me_retrieve"]
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    Article: {
      readonly id: number
      /** Format: date-time */
      stamp?: string
      author?: string | null
      title_original?: string | null
      title?: string | null
      content_original?: string | null
      content?: string | null
      language?: string | null
      url?: string | null
      feed: number
    }
    ArticleRead: {
      id: number
      readonly stamp: number
      author?: string | null
      title_original?: string | null
      title?: string | null
      language?: string | null
      url?: string | null
      /** Format: int64 */
      views: number
      /** Format: double */
      rating: number
      /** Format: double */
      to_reads: number
      length: number
      excerpt?: string | null
      feed: number
    }
    ArticleSerializerFull: {
      id: number
      readonly stamp: number
      author?: string | null
      title_original?: string | null
      title?: string | null
      content_original?: string | null
      content?: string | null
      language?: string | null
      url?: string | null
      /** Format: int64 */
      views: number
      /** Format: double */
      rating: number
      /** Format: double */
      to_reads: number
      length: number
      excerpt?: string | null
      readonly feed: components["schemas"]["Nested"]
    }
    AuthToken: {
      username: string
      password: string
      readonly token: string
    }
    Feed: {
      id: number
      readonly my_rating: number
      homepage: string
      url: string
      language: string
      title: string
      license?: string | null
      icon: string
      active?: boolean | null
      /** Format: date-time */
      last_polled?: string | null
      tags?: string[] | null
      /** Format: double */
      last_polled_epoch?: number | null
      /** Format: int64 */
      article_count?: number | null
      average_time_from_last_post?: number | null
    }
    FeedSerializerSimple: {
      id: number
      title: string
      icon: string
      license?: string | null
    }
    Nested: {
      id: number
      homepage: string
      url: string
      language: string
      title: string
      license?: string | null
      icon: string
      active?: boolean | null
      /** Format: date-time */
      last_polled?: string | null
      incomplete?: boolean | null
      salt_url?: boolean | null
      rating?: number | null
      premium?: boolean | null
      cookies?: string | null
      exclude?: string | null
      main?: string | null
      tor?: boolean | null
      asy?: boolean | null
      /** Format: byte */
      readonly iconblob: string | null
      script?: string | null
      frequency?: string | null
      tags?: string[] | null
    }
    PaginatedArticleReadList: {
      /** @example 123 */
      count: number
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=4
       */
      next?: string | null
      /**
       * Format: uri
       * @example http://api.example.org/accounts/?page=2
       */
      previous?: string | null
      results: components["schemas"]["ArticleRead"][]
    }
    PatchedArticle: {
      readonly id?: number
      /** Format: date-time */
      stamp?: string
      author?: string | null
      title_original?: string | null
      title?: string | null
      content_original?: string | null
      content?: string | null
      language?: string | null
      url?: string | null
      feed?: number
    }
    PatchedFeed: {
      id?: number
      readonly my_rating?: number
      homepage?: string
      url?: string
      language?: string
      title?: string
      license?: string | null
      icon?: string
      active?: boolean | null
      /** Format: date-time */
      last_polled?: string | null
      tags?: string[] | null
      /** Format: double */
      last_polled_epoch?: number | null
      /** Format: int64 */
      article_count?: number | null
      average_time_from_last_post?: number | null
    }
    PatchedProfile: {
      readonly id?: number
      newsletter?: boolean
      list_email?: string
      list_frequency?: string
      list_news?: number
      list_format?: string
      whitelist?: string[]
      whitelist_authors?: string[]
      blacklist?: string[]
      blacklist_authors?: string[]
      sociality_weight?: number
      /** Format: double */
      gravity?: number
      /** Format: double */
      age_divider?: number
      feed_weight?: number
      list_weight?: number
      /** Format: date-time */
      last_access?: string | null
      bow?: unknown
      tags?: string[]
      languages?: string[]
      list_hour?: number
      list_fulltext?: boolean
    }
    PatchedUser: {
      /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
      username?: string
      /** Name of User */
      name?: string
      /** Format: uri */
      readonly url?: string
      /**
       * Staff status
       * @description Designates whether the user can log into this admin site.
       */
      is_staff?: boolean
    }
    PatchedUserArticleLists: {
      /** Format: uuid */
      readonly id?: string
      name?: string
      automatic?: boolean
    }
    PatchedUserFeed: {
      feed?: number
      user?: number
      rating?: number
    }
    Profile: {
      readonly id: number
      newsletter?: boolean
      list_email?: string
      list_frequency?: string
      list_news?: number
      list_format?: string
      whitelist?: string[]
      whitelist_authors?: string[]
      blacklist?: string[]
      blacklist_authors?: string[]
      sociality_weight?: number
      /** Format: double */
      gravity?: number
      /** Format: double */
      age_divider?: number
      feed_weight?: number
      list_weight?: number
      /** Format: date-time */
      last_access?: string | null
      bow?: unknown
      tags?: string[]
      languages?: string[]
      list_hour?: number
      list_fulltext?: boolean
    }
    User: {
      /** @description Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. */
      username: string
      /** Name of User */
      name?: string
      /** Format: uri */
      readonly url: string
      /**
       * Staff status
       * @description Designates whether the user can log into this admin site.
       */
      is_staff?: boolean
    }
    UserArticleLists: {
      /** Format: uuid */
      readonly id: string
      name: string
      automatic?: boolean
    }
    UserArticleListsSerializerFull: {
      /** Format: uuid */
      readonly id: string
      name: string
      automatic?: boolean
      user: number
      readonly articles: number[]
    }
    UserFeed: {
      feed: number
      user: number
      rating?: number
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  articles_list: {
    parameters: {
      query?: {
        feed_id?: number
        /** @description Multiple values may be separated by commas. */
        ids?: number[]
        /** @description A page number within the paginated result set. */
        page?: number
        /** @description Cerca */
        query?: string
        /** @description Articoli letti */
        read?: boolean
        search_author?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["PaginatedArticleReadList"]
        }
      }
    }
  }
  articles_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["Article"]
        "application/x-www-form-urlencoded": components["schemas"]["Article"]
        "multipart/form-data": components["schemas"]["Article"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Article"]
        }
      }
    }
  }
  articles_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this articles combined. */
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["ArticleSerializerFull"]
        }
      }
    }
  }
  articles_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this articles combined. */
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["Article"]
        "application/x-www-form-urlencoded": components["schemas"]["Article"]
        "multipart/form-data": components["schemas"]["Article"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Article"]
        }
      }
    }
  }
  articles_destroy: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this articles combined. */
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  articles_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this articles combined. */
        id: number
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedArticle"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedArticle"]
        "multipart/form-data": components["schemas"]["PatchedArticle"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Article"]
        }
      }
    }
  }
  articles_epub_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this articles combined. */
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["ArticleRead"]
        }
      }
    }
  }
  articles_html_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this articles combined. */
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["ArticleRead"]
        }
      }
    }
  }
  articles_pdf_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this articles combined. */
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["ArticleRead"]
        }
      }
    }
  }
  articles_translate_create: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this articles combined. */
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["Article"]
        "application/x-www-form-urlencoded": components["schemas"]["Article"]
        "multipart/form-data": components["schemas"]["Article"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Article"]
        }
      }
    }
  }
  auth_token_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/x-www-form-urlencoded": components["schemas"]["AuthToken"]
        "multipart/form-data": components["schemas"]["AuthToken"]
        "application/json": components["schemas"]["AuthToken"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["AuthToken"]
        }
      }
    }
  }
  feeds_list: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Feed"][]
        }
      }
    }
  }
  feeds_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["Feed"]
        "application/x-www-form-urlencoded": components["schemas"]["Feed"]
        "multipart/form-data": components["schemas"]["Feed"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Feed"]
        }
      }
    }
  }
  feeds_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this feeds combined. */
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Feed"]
        }
      }
    }
  }
  feeds_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this feeds combined. */
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["Feed"]
        "application/x-www-form-urlencoded": components["schemas"]["Feed"]
        "multipart/form-data": components["schemas"]["Feed"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Feed"]
        }
      }
    }
  }
  feeds_destroy: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this feeds combined. */
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  feeds_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique value identifying this feeds combined. */
        id: number
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedFeed"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedFeed"]
        "multipart/form-data": components["schemas"]["PatchedFeed"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Feed"]
        }
      }
    }
  }
  feeds_simple_retrieve: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["FeedSerializerSimple"]
        }
      }
    }
  }
  lists_list: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleLists"][]
        }
      }
    }
  }
  lists_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserArticleLists"]
        "application/x-www-form-urlencoded": components["schemas"]["UserArticleLists"]
        "multipart/form-data": components["schemas"]["UserArticleLists"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleListsSerializerFull"]
        }
      }
    }
  }
  lists_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A UUID string identifying this user article lists. */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleListsSerializerFull"]
        }
      }
    }
  }
  lists_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A UUID string identifying this user article lists. */
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserArticleLists"]
        "application/x-www-form-urlencoded": components["schemas"]["UserArticleLists"]
        "multipart/form-data": components["schemas"]["UserArticleLists"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleLists"]
        }
      }
    }
  }
  lists_destroy: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A UUID string identifying this user article lists. */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  lists_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A UUID string identifying this user article lists. */
        id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedUserArticleLists"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedUserArticleLists"]
        "multipart/form-data": components["schemas"]["PatchedUserArticleLists"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleLists"]
        }
      }
    }
  }
  lists_add_article_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A UUID string identifying this user article lists. */
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserArticleLists"]
        "application/x-www-form-urlencoded": components["schemas"]["UserArticleLists"]
        "multipart/form-data": components["schemas"]["UserArticleLists"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleLists"]
        }
      }
    }
  }
  lists_epub_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A UUID string identifying this user article lists. */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleLists"]
        }
      }
    }
  }
  lists_html_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A UUID string identifying this user article lists. */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleLists"]
        }
      }
    }
  }
  lists_pdf_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A UUID string identifying this user article lists. */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleLists"]
        }
      }
    }
  }
  lists_remove_article_destroy: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A UUID string identifying this user article lists. */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  lists_rss_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A UUID string identifying this user article lists. */
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleLists"]
        }
      }
    }
  }
  lists_me_retrieve: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserArticleLists"]
        }
      }
    }
  }
  profile_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Profile"]
        }
      }
    }
  }
  profile_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["Profile"]
        "application/x-www-form-urlencoded": components["schemas"]["Profile"]
        "multipart/form-data": components["schemas"]["Profile"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Profile"]
        }
      }
    }
  }
  profile_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedProfile"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedProfile"]
        "multipart/form-data": components["schemas"]["PatchedProfile"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["Profile"]
        }
      }
    }
  }
  schema_retrieve: {
    parameters: {
      query?: {
        format?: "json" | "yaml"
        lang?: "en" | "fr-fr" | "it-it" | "pt-br"
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/vnd.oai.openapi": {
            [key: string]: unknown
          }
          "application/yaml": {
            [key: string]: unknown
          }
          "application/vnd.oai.openapi+json": {
            [key: string]: unknown
          }
          "application/json": {
            [key: string]: unknown
          }
        }
      }
    }
  }
  user_feeds_list: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserFeed"][]
        }
      }
    }
  }
  user_feeds_create: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserFeed"]
        "application/x-www-form-urlencoded": components["schemas"]["UserFeed"]
        "multipart/form-data": components["schemas"]["UserFeed"]
      }
    }
    responses: {
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserFeed"]
        }
      }
    }
  }
  user_feeds_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique integer value identifying this user feeds. */
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserFeed"]
        }
      }
    }
  }
  user_feeds_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique integer value identifying this user feeds. */
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserFeed"]
        "application/x-www-form-urlencoded": components["schemas"]["UserFeed"]
        "multipart/form-data": components["schemas"]["UserFeed"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserFeed"]
        }
      }
    }
  }
  user_feeds_destroy: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique integer value identifying this user feeds. */
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No response body */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  user_feeds_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        /** @description A unique integer value identifying this user feeds. */
        id: number
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedUserFeed"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedUserFeed"]
        "multipart/form-data": components["schemas"]["PatchedUserFeed"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["UserFeed"]
        }
      }
    }
  }
  users_list: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["User"][]
        }
      }
    }
  }
  users_retrieve: {
    parameters: {
      query?: never
      header?: never
      path: {
        username: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["User"]
        }
      }
    }
  }
  users_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        username: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        "application/json": components["schemas"]["User"]
        "application/x-www-form-urlencoded": components["schemas"]["User"]
        "multipart/form-data": components["schemas"]["User"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["User"]
        }
      }
    }
  }
  users_partial_update: {
    parameters: {
      query?: never
      header?: never
      path: {
        username: string
      }
      cookie?: never
    }
    requestBody?: {
      content: {
        "application/json": components["schemas"]["PatchedUser"]
        "application/x-www-form-urlencoded": components["schemas"]["PatchedUser"]
        "multipart/form-data": components["schemas"]["PatchedUser"]
      }
    }
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["User"]
        }
      }
    }
  }
  users_me_retrieve: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          "application/json": components["schemas"]["User"]
        }
      }
    }
  }
}

# Generated by Django 5.0.10 on 2025-01-23 14:11

from django.db import migrations


def create_views(apps, schema_editor):

    with schema_editor.connection.cursor() as cursor:
        cursor.execute("DROP VIEW IF EXISTS articles_combined")
        cursor.execute("DROP TABLE IF EXISTS articles_data")
        cursor.execute("DROP VIEW IF EXISTS articles_data_view")
        cursor.execute("DROP VIEW IF EXISTS articlelists_count_view")
        cursor.execute("""
                       CREATE TABLE articles_data (
                            id integer NOT NULL,
                            views bigint NOT NULL DEFAULT 0,
                            rating numeric NOT NULL DEFAULT 0.0,
                            to_reads numeric NOT NULL DEFAULT 0.0,
                            length integer NOT NULL DEFAULT 0,
                            excerpt text DEFAULT ''
                        )""")

        cursor.execute("""
                       CREATE VIEW articles_combined AS (
                            SELECT
                                articles.*,
                                articles_data.views,
                                articles_data.rating,
                                articles_data.to_reads,
                                articles_data.length,
                                articles_data.excerpt
                            FROM
                                articles
                                JOIN articles_data ON articles.id = articles_data.id
                            )""")

        cursor.execute("""
                       CREATE VIEW articlelists_count_view AS
                            SELECT
                                articles.id as article_id,
                                COUNT(news_userarticlelists.user_id)
                            FROM
                                articles
                                JOIN news_articlelists ON articles.id = news_articlelists.article_id
                                JOIN news_userarticlelists ON news_articlelists.list_id = news_userarticlelists.id
                            WHERE NOT news_userarticlelists.automatic
                            GROUP BY articles.id
                            ORDER BY articles.id""")

        cursor.execute("""
                       CREATE VIEW articles_data_view AS
                            SELECT
                                articles.id,
                                COALESCE(COUNT(CASE WHEN user_articles.read THEN 1 END), 0) AS views,
                                COALESCE(AVG(user_articles.rating), 0) AS rating,
                                COALESCE(AVG(articlelists_count_view.count), 0) AS to_reads,
                                COALESCE(LENGTH(articles.content), LENGTH(articles.content_original)) as length,
                                SUBSTRING((CASE WHEN LENGTH(TRIM(articles.content))>0 THEN articles.content ELSE articles.content_original END) FOR 500) AS excerpt
                            FROM
                                articles
                                LEFT OUTER JOIN user_articles ON articles.id = user_articles.article_id
                                LEFT OUTER JOIN articlelists_count_view ON articles.id = articlelists_count_view.article_id
                            GROUP BY articles.id""")



def delete_views(apps, schema_editor):

    db_alias = schema_editor.connection.alias

    with schema_editor.connection.cursor() as cursor:
        cursor.execute("DROP VIEW IF EXISTS articles_combined")
        cursor.execute("DROP TABLE IF EXISTS articles_data")
        cursor.execute("DROP VIEW IF EXISTS articles_data_view")
        cursor.execute("DROP VIEW IF EXISTS articlelists_count_view")



class Migration(migrations.Migration):

    dependencies = [
        ('news', '0003_user_data'),
    ]

    operations = [
        migrations.RunPython(create_views, reverse_code=delete_views),
    ]
